{
	"openapi": "3.0.0",
	"info": {
		"title": "Registration Building Block API for Applicant user services",
		"description": "User/applicant can register new applications",
		"termsOfService": "#",
		"contact": {
			"email": "ingmar.vali@gmail.com"
		},
		"license": {
			"name": "MIT",
			"url": "https://opensource.org/license/mit/"
		},
		"version": "0.0.2"
	},
	"servers": [{
		"url": "http://ss2.egovstack.net/r1/eGovStack/COM/11222456/RegistrationBB/creg/",
		"description": "Information Mediator BB Security server"
	}],

	"paths": {

		"/api/service/{serviceKey}/startWithForm": {
			"post": {
				"tags": ["Application file"],
				"summary": "Start service application file with form",
				"description": "Returns started service application file ID",
				"operationId": "startApplicationFileForm",
				"parameters": [{
						"$ref": "#/components/parameters/Information-Mediator-Client"
					},
					{
						"name": "serviceKey",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Create a new application file in the system",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/applicationFileSubmit"
							}
						}
					},
					"required": true
				},
				"responses": {
					"500": {
						"description": "Internal server error",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/systemError"
								}
							}
						}
					},
					"200": {
						"description": "Returns started application file ID",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/applicationFileResponse"
								}
							}
						}
					},
					"404": {
						"description": "Service was not found",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/systemError"
								}
							}
						}
					}
				}
			}
		},

		"/api/service/documentUpload": {
			"post": {
				"summary": "Upload a requirement document",
				"operationId": "uploadFile",
				"tags": [
					"Application file",
					"Operators services"
				],
				"parameters": [{
					"name": "additionalMetadata",
					"in": "query",
					"description": "Additional Metadata",
					"required": false,
					"schema": {
						"type": "string"
					}
				}],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"properties": {
									"file": {
										"type": "array",
										"items": {
											"type": "string",
											"format": "base64",
											"example": "V2UgbG92ZSBqc29uIQ=="
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "File successfully uploaded",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/uploadResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request, file upload failed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/systemError"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/systemError"
								}
							}
						}
					}
				}
			}
		},

		"/api/service/applicationFileList": {
			"get": {
				"tags": ["Application file"],
				"summary": "Retrieve all applicant's application files",
				"description": "Returns application list",
				"operationId": "getApplicantFileList",
				"parameters": [{
						"$ref": "#/components/parameters/Information-Mediator-Client"
					},
					{
						"name": "serviceKey",
						"description": "Service Key",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "P2c9280907f23fa95017f27efd0b20074"
						}
					},
					{
						"name": "applicantId",
						"description": "Applicant user ID",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "42962de0-bdb2-11ed-9397-0242ac120004"
						}
					},
					{
						"name": "firstResult",
						"in": "query",
						"description": "Pagination of results. Specifies the index of the first result to return.",
						"schema": {
							"type": "integer",
							"example": 1
						}
					}, {
						"name": "maxResult",
						"in": "query",
						"description": "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
						"schema": {
							"type": "integer",
							"example": 10
						}
					}, {
						"name": "sortBy",
						"in": "query",
						"description": "Sort the results lexicographically by a given criterion. Valid values are instanceId, caseInstanceId, dueDate, executionId, caseExecutionId,assignee, created, description, id, name, nameCaseInsensitive and priority. Must be used in conjunction with the sortOrder parameter.",
						"schema": {
							"type": "string",
							"example": "created"
						}
					}, {
						"name": "sortOrder",
						"in": "query",
						"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter.",
						"schema": {
							"type": "string",
							"example": "asc"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"*/*": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/applicantApplicationFileListResponse"
									}
								}
							}
						}
					}
				}
			}
		},

		"/api/service/applicationFile/{fileId}": {
			"get": {
				"tags": ["Application file", "Operators services"],
				"summary": "Get application file by  ID",
				"description": "Returns application file",
				"operationId": "getApplicationFileById",
				"parameters": [{
						"$ref": "#/components/parameters/Information-Mediator-Client"
					},
					{
						"name": "fileId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"example": "8a70cd6d-bdb2-11ed-9397-0242ac120004"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns application file by id",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/applicationFileResponse"
								}
							}
						}
					},
					"404": {
						"description": "Application file was not found",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/systemError"
								}
							}
						}
					}
				}
			}
		},

		"/api/service/{fileId}/updateWithForm": {
			"put": {
				"tags": ["Operators services"],
				"summary": "Update service application file with operator's form data",
				"description": "Returns updated service application file ID",
				"operationId": "updateApplicationFileForm",
				"parameters": [{
						"$ref": "#/components/parameters/Information-Mediator-Client"
					},
					{
						"name": "fileId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Update application file data with operators input",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/applicationFileSubmit"
							}
						}
					},
					"required": true
				},
				"responses": {
					"500": {
						"description": "Internal server error",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/systemError"
								}
							}
						}
					},
					"200": {
						"description": "Returns updated application file",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/applicationFileResponse"
								}
							}
						}
					},
					"404": {
						"description": "Application file was not found",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/systemError"
								}
							}
						}
					}
				}
			}
		},

		"/api/service/operatorFileList": {
			"get": {
				"tags": ["Operators services"],
				"summary": "Retrieve all applicant's application files",
				"description": "Returns application list",
				"operationId": "getOperatorFileList",
				"parameters": [{
						"$ref": "#/components/parameters/Information-Mediator-Client"
					},
					{
						"name": "serviceKey",
						"description": "Service Key",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "P2c9280907f23fa95017f27efd0b20074"
						}
					},
					{
						"name": "operatorId",
						"description": "Operator's user ID",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "42962de0-bdb2-11ed-9397-0242ac120004"
						}
					},
					{
						"name": "roleId",
						"description": "Operator's role ID",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "42962de0-bdb2-11ed-9397-0242ac120004"
						}
					},
					{
						"name": "firstResult",
						"in": "query",
						"description": "Pagination of results. Specifies the index of the first result to return.",
						"schema": {
							"type": "integer",
							"example": 1
						}
					}, {
						"name": "maxResult",
						"in": "query",
						"description": "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
						"schema": {
							"type": "integer",
							"example": 10
						}
					}, {
						"name": "sortBy",
						"in": "query",
						"description": "Sort the results lexicographically by a given criterion. Valid values are instanceId, caseInstanceId, dueDate, executionId, caseExecutionId,assignee, created, description, id, name, nameCaseInsensitive and priority. Must be used in conjunction with the sortOrder parameter.",
						"schema": {
							"type": "string",
							"example": "created"
						}
					}, {
						"name": "sortOrder",
						"in": "query",
						"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter.",
						"schema": {
							"type": "string",
							"example": "asc"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"*/*": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/applicantApplicationFileListResponse"
									}
								}
							}
						}
					}
				}
			}
		},

		"/api/task": {
			"get": {
				"tags": ["Operators services"],
				"summary": "Retrieve all tasks",
				"description": "Returns task list",
				"operationId": "getTasks",
				"parameters": [{
					"name": "mainTaskId",
					"in": "query",
					"required": false,
					"schema": {
						"type": "string"
					}
				}, {
					"name": "firstResult",
					"in": "query",
					"description": "Pagination of results. Specifies the index of the first result to return.",
					"schema": {
						"type": "integer"
					}
				}, {
					"name": "maxResult",
					"in": "query",
					"description": "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
					"schema": {
						"type": "integer"
					}
				}, {
					"name": "sortBy",
					"in": "query",
					"description": "Sort the results lexicographically by a given criterion. Valid values are instanceId, caseInstanceId, dueDate, executionId, caseExecutionId,assignee, created, description, id, name, nameCaseInsensitive and priority. Must be used in conjunction with the sortOrder parameter.",
					"schema": {
						"type": "string"
					}
				}, {
					"name": "sortOrder",
					"in": "query",
					"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter.",
					"schema": {
						"type": "string"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"*/*": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/userTaskResponse"
									}
								}
							}
						}
					}
				}
			}
		},

		"/api/task/{id}": {
			"get": {
				"tags": ["Operators services"],
				"summary": "Get task by id",
				"description": "Returns task by id",
				"operationId": "getTaskById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string"
					}
				}],
				"responses": {
					"200": {
						"description": "Returns task by id",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/signableDataUserTaskResponse"
								}
							}
						}
					},
					"404": {
						"description": "Task hasn't found",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/systemError"
								}
							}
						}
					}
				}
			}
		},


		"/api/task/{id}/complete": {
			"post": {
				"tags": ["Operators services"],
				"summary": "Complete task by id",
				"operationId": "completeTaskById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"required": true,
					"schema": {
						"type": "string"
					}
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/additionalData"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Task successfully completed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/completedTaskResponse"
								}
							}
						}
					},
					"500": {
						"description": "Internal system error",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/systemError"
								}
							}
						}
					},
					"404": {
						"description": "Task was not found",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/systemError"
								}
							}
						}
					}
				}
			}
		}


	},
	"components": {
		"parameters": {
			"Information-Mediator-Client": {
				"in": "header",
				"name": "Information-Mediator-Client",
				"example": "eGovStack/GOV/90000009/digitalregistries",
				"description": "Format is: INSTANCE/CLASS/MEMBER/SUBSYSTEM",
				"schema": {
					"type": "string"
				},
				"required": true
			}
		},
		"schemas": {
			"applicationFileSubmit": {
				"required": [
					"applicantId"
				],
				"properties": {

					"applicationName": {
						"type": "string",
						"description": "Free text application name",
						"example": "Amya Yuko"
					},
					"applicantId": {
						"type": "string",
						"example": "42962de0-bdb2-11ed-9397-0242ac120004",
						"description": "Applicant is a user who submitted application"
					},
					"created": {
						"type": "string",
						"format": "date-time",
						"example": "2000-10-23T00:00:00.000Z",
						"description": "Time when the application file was created by the user- Draft"
					},

					"formData": {
						"$ref": "#/components/schemas/formData"
					},

					"documentUrls": {
						"$ref": "#/components/schemas/documentUrls"
					}

				}
			},
			"applicationFileResponse": {
				"required": [
					"applicantId",
					"serviceKey"
				],
				"properties": {

					"fileId": {
						"type": "string",
						"description": " Application file identifier 81c4445c-bff6-11ed-afa1-0242ac120002",
						"example": "81c4445c-bff6-11ed-afa1-0242ac120002"
					},
					"registered": {
						"type": "string",
						"format": "date-time",
						"example": "2000-10-23T00:00:00.000Z",
						"description": "Time when the application file was registered in the Registration BB system"
					},
					"serviceKey": {
						"type": "string",
						"example": "P2c9280957e579ad7017e58a3399f0068"
					},
					"serviceName": {
						"type": "string",
						"example": "Post partum registration service"
					},
					"status": {
						"$ref": "#/components/schemas/statusModel"
					},
					"ended": {
						"type": "boolean",
						"example": "false",
						"description": "True, if application file processing has ended"
					},
					"applicationData": {
						"$ref": "#/components/schemas/applicationFileSubmit"
					}
				}
			},
			"formData": {
				"type": "object",
				"properties": {
					"data": {
						"type": "object",
						"additionalProperties": {
							"type": "object"
						}
					},
					"eFormId": {
						"type": "string",
						"example": "42962de0-bdb2-11ed-9397-0242ac120004",
						"description": "Form ID used in the data capturing"
					}
				}
			},
			"additionalData": {
				"type": "object",
				"properties": {
					"data": {
						"type": "object",
						"additionalProperties": {
							"type": "object"
						}
					}
				}
			},
			"documentUrls": {
				"type": "array",
				"xml": {
					"wrapped": true
				},
				"items": {
					"type": "string",
					"xml": {
						"name": "photoUrl"
					}
				}
			},
			"statusModel": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"enum": ["PENDING", "APPROVED", "SENDBACK", "REJECTED"],
						"example": "PENDING"
					},
					"title": {
						"type": "string",
						"example": "Pending"
					}
				}
			},
			"systemError": {
				"type": "object",
				"properties": {
					"traceId": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"localizedMessage": {
						"type": "string"
					}
				}
			},
			"applicantApplicationFileListResponse": {
				"type": "object",
				"properties": {
					"fileId": {
						"type": "string",
						"description": " Application file identifier 81c4445c-bff6-11ed-afa1-0242ac120002",
						"example": "81c4445c-bff6-11ed-afa1-0242ac120002"
					},
					"mainTaskId": {
						"type": "string",
						"example": "42962de0-bdb2-11ed-9397-0242ac120004"
					},
					"name": {
						"type": "string",
						"example": "Application xyz"
					},
					"assignee": {
						"type": "string",
						"example": "42962de0-bdb2-11ed-9397-0242ac120004",
						"description": "operator ID who is processing the applicant file"
					},
					"assigneeName": {
						"type": "string",
						"example": "John Smith",
						"description": "operator ID who has the task of processing the application file"
					},
					"status": {
						"$ref": "#/components/schemas/statusModel"
					},

					"applicantId": {
						"type": "string",
						"example": "42962de0-bdb2-11ed-9397-0242ac120004"
					},
					"created": {
						"type": "string",
						"format": "date-time",
						"example": "2000-10-23T00:00:00.000Z",
						"description": "Time when the application file was created by the user- Draft"
					},
					"registered": {
						"type": "string",
						"format": "date-time",
						"example": "2000-10-23T00:00:00.000Z",
						"description": "Time when the application file was registered in the Registration BB system"
					},

					"description": {
						"type": "string",
						"example": "Any text."
					},
					"serviceName": {
						"type": "string",
						"example": "Post partum registration service"
					},

					"serviceKey": {
						"type": "string",
						"example": "42962de0-bdb2-11ed-9397-0242ac120004"
					},
					"formKey": {
						"type": "string",
						"example": "42962de0-bdb2-11ed-9397-0242ac120004"
					},
					"documentUrls": {
						"$ref": "#/components/schemas/documentUrls"
					},
					"additionalMeta": {
						"$ref": "#/components/schemas/additionalData"
					}


				}
			},
			"uploadResponse": {
				"type": "object",
				"properties": {
					"code": {
						"type": "integer",
						"format": "int32"
					},
					"type": {
						"type": "string"
					},
					"message": {
						"type": "string"

					},
					"url": {
						"type": "string"

					}
				}
			},
			"completedTaskResponse": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"fileId": {
						"type": "string"
					},
					"serviceKey": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/statusModel"
					},
					"variables": {
						"type": "object",
						"additionalProperties": {
							"$ref": "#/components/schemas/additionalData"
						}
					}
				}
			},
			"userTaskResponse": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"assigneeId": {
						"type": "string"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					},
					"description": {
						"type": "string"
					},
					"serviceName": {
						"type": "string"
					},
					"fileId": {
						"type": "string"
					},
					"serviceKey": {
						"type": "string"
					},
					"eFormId": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/statusModel"
					}
				}
			},
			"signableDataUserTaskResponse": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"assigneeId": {
						"type": "string"
					},
					"created": {
						"type": "string",
						"format": "date-time"
					},
					"description": {
						"type": "string"
					},
					"fileId": {
						"type": "string"
					},
					"serviceKey": {
						"type": "string"
					},
					"serviceName": {
						"type": "string"
					},
					"eFormId": {
						"type": "string"
					},

					"formVariables": {
						"type": "object",
						"additionalProperties": {
							"type": "object"
						}
					},

					"status": {
						"$ref": "#/components/schemas/statusModel"
					},
					"data": {
						"type": "object",
						"additionalProperties": {
							"type": "object"
						}
					}
				}
			}


		},
		"requestBodies": {
			"applicationFile": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/applicationFileSubmit"
						}
					}
				},
				"description": "Application file object that needs to be added to the system"
			}
		}
	}
}

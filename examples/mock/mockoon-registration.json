{
  "uuid": "9ea8d795-abc6-4993-b4d3-a33d4a0541a0",
  "lastMigration": 24,
  "name": "Registration",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3003,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "f7b2859f-5009-4e5b-8075-5aa5f359ad07",
      "documentation": "API endpoint that allows anyone to see service statistics",
      "method": "get",
      "endpoint": "data/statistics/1.0",
      "responses": [
        {
          "uuid": "71a7f6f6-4915-44cc-8fa6-99bf69e99880",
          "body": "[\n  {\n    \"processed\": 100,\n    \"approved\": 90,\n    \"sentBack\": 3,\n    \"rejected\": 7,\n    \"references\": {\n      \"startDate\": \"2021-01-30\",\n      \"endDate\": \"2021-01-30\",\n      \"registrationName\": \"MTCS\",\n      \"operator\": \"Henry Snow\",\n      \"role\": \"Handler\",\n      \"timeframeDay\": true,\n      \"timeframeWeek\": false,\n      \"timeframeMonth\": false,\n      \"timeframeYear\": false\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Success Response",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Information-Mediator-Client",
              "value": "[a-zA-Z0-9_]+\\/[a-zA-Z0-9_]+\\/[a-zA-Z0-9_]+\\/[a-zA-Z0-9_]+",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "registrationName",
              "value": "MTCS",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "e58acf9e-801b-4c31-b4da-67de62ccdf6e",
          "body": "{\n  \"Requests not found\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Requests not found",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Information-Mediator-Client",
              "value": "[a-zA-Z0-9_]+\\/[a-zA-Z0-9_]+\\/[a-zA-Z0-9_]+\\/[a-zA-Z0-9_]+",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "registrationName",
              "value": "MMT",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        },
        {
          "uuid": "f473ceb8-4dd7-46b2-bc13-b20a0c758a64",
          "body": "{\n  \"Invalid format of Information-Mediator-Client, should not be null\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid mediator client format",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Information-Mediator-Client",
              "value": "[a-zA-Z0-9_]+\\\\/[a-zA-Z0-9_]+\\\\/[a-zA-Z0-9_]+\\\\/[a-zA-Z0-9_]+",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}